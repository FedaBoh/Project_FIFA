from datetime import datetime
import time
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
import tensorflow as tf
from tensorflow.keras import layers
from tensorflow.python.keras.layers import Dropout

# load dataset; "ISO-8859-1" is for recognizing special characters
dataset = pd.read_csv("new_test.csv", sep=";", encoding="ISO-8859-1")
# replace all commas with dots (for floating numbers)
dataset = dataset.replace({',': '.'}, regex=True)

print ("**************************************************")
print ("*                                                *")
print ("*      PROJECT - DATASCIENCE WITH FIFA (2021)    *")
print ("*         by Federica, Reetta e Kristjan         *")
print ("*                                                *")
print ("**************************************************")
print ("\nChoose the class to modify\n")
i= 0
for column in dataset.columns:
    print(i," - ", column, "\t(default: ", dataset[dataset.columns[i]][0], ")")
    i = i + 1
time.sleep(2)
for choice in range(55):
    choice = int(input("\ninsert number value to change ('0' for Esc):"))
    if choice <= 0:
        print("please wait...")
        break
    if choice < 55:
        value = input(dataset.columns[choice])
    else: 
        print("please wait...")
        break
    dataset[dataset.columns[choice]][0] = value
    
    
# change strings to float numbers
dataset["age"] = dataset["age"].astype(float)
dataset["height_cm"] = dataset["height_cm"].astype(float)
dataset["weight_kg"] = dataset["weight_kg"].astype(float)
dataset["overall"] = dataset["overall"].astype(float)
dataset["potential"] = dataset["potential"].astype(float)
dataset["value_eur"] = dataset["value_eur"].astype(float)
dataset["wage_eur"] = dataset["wage_eur"].astype(float)

# normalizing the data
dataset["age"] = dataset["age"] / 100

# normalizing with the formula: res = (x - mean) / std
dataset["height_cm"] = (dataset["height_cm"] - 180) / 6.5
dataset["weight_kg"] = (dataset["weight_kg"] - 74) / 6.5
dataset["overall"] = (dataset["overall"] - 75) / 6.5
dataset["potential"] = (dataset["potential"] - 71) / 6.5

# normalizing the label
#dataset["value_eur"] = dataset["value_eur"] / 100000

# coding preferred foot as either 0 or 1
dataset.loc[dataset["preferred_foot"].str.contains("Left"), "preferred_foot"] = "0"
dataset.loc[dataset["preferred_foot"].str.contains("Right"), "preferred_foot"] = "1"

# changing preferred foot strings to floats
dataset["preferred_foot"] = dataset["preferred_foot"].astype(float)

# selecting all columns from pace until the end and replacing the values with the percent number (x/100)
dataset.loc[:, "pace":] = dataset.loc[:, "pace":].astype(float)/100

# copied the dataset to further modify it
smaller_dataset = dataset.copy(deep=True)

# dropped the columns that are not going to be used by the neural network
smaller_dataset = smaller_dataset.drop(["sofifa_id", "short_name", "player_positions", "work_rate", "wage_eur"], axis=1)

# selecting the labels from the dataset
#labels = smaller_dataset["value_eur"]

# dropping the labels from the dataset
smaller_dataset = smaller_dataset.drop(["value_eur"], axis=1).astype(float)


from tensorflow import keras
model_Player=keras.models.load_model('model_Player')
predictions2 = model_Player.predict(smaller_dataset)
print("Result:\nthe player has this monetary value for the club:")
value_in_eur = int((predictions2[0][0])*100000)
print(value_in_eur, " euro")
